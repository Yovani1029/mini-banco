name: Java CI with Maven

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  lint:
    name: üîé Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Checkstyle
        run: mvn checkstyle:check

  test:
    name: üß™ Tests + Coverage
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run tests with coverage
        run: mvn -B clean verify  # JaCoCo en pom exige ‚â•90%

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/

  build:
    name: üì¶ Build JAR
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Package application
        run: mvn -B package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: mini-banco-jar
          path: target/*.jar

  docker:
    name: üê≥ Docker
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/mini-banco:latest .

      - name: Run Docker container
        run: docker run --rm -d -p 8080:8080 --name mini-banco ${{ secrets.DOCKER_USERNAME }}/mini-banco:latest

      - name: Test container health
        run: |
          sleep 10
          curl -f http://localhost:8080 || (echo "‚ùå App not responding" && exit 1)

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/mini-banco:latest
